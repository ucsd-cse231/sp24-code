(defn (head l) (vec-get l 0))

(defn (tail l) (vec-get l 1))

(defn (map f xs)
 (if (= xs false)
   false
   (vec (f (head xs)) (map f (tail xs)))))

(let* ((off input)
       (inc (fn (x) (+ x off)))
       (l   (vec 10 (vec 20 (vec 30 false))))
      )
  (map inc l))